/**
 * Exemplo: Mudan√ßa de typeWeightRecipe de ID para Texto
 *
 * Este arquivo demonstra como a altera√ß√£o do typeWeightRecipe
 * afeta o payload enviado para a API.
 */

console.log('=== Mudan√ßa de typeWeightRecipe: ID ‚Üí Texto ===\n');

// Exemplo: Dados como eram enviados ANTES da altera√ß√£o
const payloadAntes = {
  name: 'Teste144',
  category: 'Pratos principais',
  descripition: '',
  image: '',
  preparationTime: '3h',
  yieldRecipe: '-1',
  typeYield: 'Pessoas',
  weightRecipe: '2',
  typeWeightRecipe: '68f539808c1a600d4a5d8d7c', // ‚ùå ID da unidade
  ingredients: [
    {
      idIngredient: '68f6243c8c1a600d4a5d8f27',
      quantityIngredientRecipe: '5920',
      unitAmountUseIngredient: 'Gramas',
    },
  ],
  modePreparation: [],
};

console.log('üì§ ANTES (ID):');
console.log(`typeWeightRecipe: "${payloadAntes.typeWeightRecipe}"`);
console.log('‚Üë Valor n√£o leg√≠vel para humanos');

// Exemplo: Dados como ser√£o enviados DEPOIS da altera√ß√£o
const payloadDepois = {
  ...payloadAntes,
  typeWeightRecipe: 'Quilogramas', // ‚úÖ Nome leg√≠vel da unidade
};

console.log('\nüì§ DEPOIS (Texto):');
console.log(`typeWeightRecipe: "${payloadDepois.typeWeightRecipe}"`);
console.log('‚Üë Valor leg√≠vel e compreens√≠vel');

console.log('\nüîÑ COMPARA√á√ÉO:');
console.log('| Campo | Antes | Depois |');
console.log('|-------|-------|--------|');
console.log(
  `| typeWeightRecipe | ${payloadAntes.typeWeightRecipe} | ${payloadDepois.typeWeightRecipe} |`,
);

console.log('\n‚úÖ BENEF√çCIOS:');
console.log('1. API recebe dados mais leg√≠veis');
console.log('2. N√£o precisa fazer lookup de ID ‚Üí Nome');
console.log('3. Dados s√£o mais autodocumentados');
console.log('4. Facilita debug e logs');

console.log('\nüìã MUDAN√áA NO COMPONENTE:');
console.log('RecipeBasicInfo.tsx:');
console.log('- ANTES: value={unit._id}    // Salvava ID');
console.log('- DEPOIS: value={unit.name}  // Salva nome');

export {};
